package com.atguigu.crm.handlers;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.atguigu.crm.services.CustomerActivityService;
import com.atguigu.crm.services.CustomerInfoService;
import com.atuigu.crm.entity.Customer;
import com.atuigu.crm.entity.CustomerActivity;
import com.atuigu.crm.orm.Page;

@Controller
@RequestMapping("/activity")
public class CustomerActivityHandler {
	@Autowired
	private CustomerActivityService customerActivityService;
	@Autowired
	private CustomerInfoService customerInfoService;
	
	@RequestMapping(value="/delete/{id}",method=RequestMethod.DELETE)
	public String delete(@PathVariable("id") int id, @RequestParam("customerid") int customerid) {
		customerActivityService.delete(id);
		
		
		return "redirect:/activity/list?customerid=" + customerid;
	}
	
	@RequestMapping(value="/update",method=RequestMethod.PUT)
	public String update(CustomerActivity customerActivity,
						RedirectAttributes attributes) {
		
		customerActivityService.update(customerActivity);
		
		attributes.addFlashAttribute("message", "修改成功！");
		
		Long customerid = customerActivity.getCustomer().getId();
		
		return "redirect:/activity/list?customerid=" + customerid;
	}
	
	@RequestMapping(value="/create",method=RequestMethod.GET)
	public String edit(HttpServletRequest request,
						@RequestParam("id") int id) {
		CustomerActivity activity = customerActivityService.get(id);
		
		request.setAttribute("activity", activity);
		
		return "activity/input";
	}
	
	@RequestMapping(value="/create", method = RequestMethod.POST)
	public String save(CustomerActivity activity,
						RedirectAttributes attributes) {
		attributes.addFlashAttribute("message", "新建成功！");
		
		customerActivityService.save(activity);
		
		Long id = activity.getCustomer().getId();

		
		return "redirect:/activity/list?customerid=" + id;
	}
	
	@RequestMapping(value="/create/{id}", method = RequestMethod.GET)
	public String create(@PathVariable("id") long id,
							Map<String, Object> map) {
		Customer customer = new Customer();
		customer.setId(id);
		
		CustomerActivity activity = new CustomerActivity();
		activity.setCustomer(customer);
		
		map.put("activity", activity);
		
		return "activity/input";
	}
	
	@RequestMapping(value="/list", method = RequestMethod.GET)
	public String list(HttpServletRequest request,
						@RequestParam("customerid") Integer id,
						@RequestParam(value="pageNo",required=false) String pageNoStr, 
						Map<String, Object> map){
		int pageNo = 1;
		try {
			pageNo = Integer.parseInt(pageNoStr);
		} catch (Exception e) {}
		
		Customer customer = customerInfoService.get(id);
		map.put("customer", customer);
		
		String queryString = "customerid=" + id;
		map.put("queryString", queryString);
		
		Page<CustomerActivity> page = customerActivityService.getPage(pageNo, id);
		map.put("page", page);
		
		return "activity/list";
	}
}
